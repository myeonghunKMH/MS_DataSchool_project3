
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

resources:
- repo: self

variables:
  azureServiceConnection: 'azure-aks-connection'
  azureContainerRegistry: '1dtteam1registry.azurecr.io'
  imageRepository: 'itc-app'
  azureResourceGroup: '1dt-final-team1'
  kubernetesCluster: '1dt-team1-aks'
  dockerRegistryServiceConnection: 'acr-connection'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push stage
  jobs:
  - job: Build
    displayName: Build
    pool: Default
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: npm install
      displayName: 'npm install'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/k8s'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool: Default
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'manifests'
              path: '$(Pipeline.Workspace)/manifests'

          - task: replacetokens@3
            displayName: 'Replace tokens in Kubernetes manifests'
            inputs:
              targetFiles: '$(Pipeline.Workspace)/manifests/deployment.yaml'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '__'
              tokenSuffix: '__'
              useLegacyPattern: false
              variables: 'IMAGE = $(azureContainerRegistry)/$(imageRepository):$(tag)'

          - task: KubernetesManifest@0
            displayName: 'Deploy to Kubernetes cluster'
            inputs:
              action: 'deploy'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: $(azureServiceConnection)
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(kubernetesCluster)
              manifests: '$(Pipeline.Workspace)/manifests/*.yaml'